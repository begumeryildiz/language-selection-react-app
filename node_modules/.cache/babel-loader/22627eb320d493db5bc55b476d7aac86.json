{"ast":null,"code":"var _jsxFileName = \"/Users/begum/My-Projects/Fietslabyrint/fietslabyrint-app/src/components/MultilanguageDirection.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport data from \"./data/languages_all.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MultilanguageDirection() {\n  _s();\n  const [language, setLanguage] = useState(\"default\");\n  const [direction, setDirection] = useState(\"\");\n  const [buttonText, setButtonText] = useState(\"\");\n  const languages = data[\"textSoftware\"].filter(element => element[\"text_id\"] === \"direction\")[0][\"item\"].map(element => element.lang);\n  const wordMap = new Map(data[\"textSoftware\"].map(value => {\n    const textId = value[\"text_id\"];\n    const choices = new Map(value[\"item\"].map(obj => [obj.lang, obj.text]));\n    return [textId, choices];\n  }));\n  const selectLanguage = () => {\n    const randomLanguage = languages[Math.floor(Math.random() * languages.length)];\n    setLanguage(randomLanguage);\n  };\n  useEffect(() => {\n    let buttonText = language;\n    if (wordMap.get(\"nameOfLanguage\").has(language)) buttonText += \" / \" + wordMap.get(\"nameOfLanguage\").get(language);\n    setButtonText(buttonText);\n    setDirection(wordMap.get(\"direction\").get(language));\n  }, [language]);\n  function handleClick() {\n    selectLanguage();\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-rounded fw-bold px-4 py-4\",\n      variant: \"success\",\n      onClick: handleClick,\n      children: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"fw-bold \",\n      style: {\n        textTransform: \"capitalize\",\n        fontSize: \"36px\"\n      },\n      children: [\" \", direction]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(MultilanguageDirection, \"z2rawmlW8t6TlYwr6rtMPUMnQEQ=\");\n_c = MultilanguageDirection;\nexport default MultilanguageDirection;\nvar _c;\n$RefreshReg$(_c, \"MultilanguageDirection\");","map":{"version":3,"names":["useEffect","useState","Button","data","MultilanguageDirection","language","setLanguage","direction","setDirection","buttonText","setButtonText","languages","filter","element","map","lang","wordMap","Map","value","textId","choices","obj","text","selectLanguage","randomLanguage","Math","floor","random","length","get","has","handleClick","textTransform","fontSize"],"sources":["/Users/begum/My-Projects/Fietslabyrint/fietslabyrint-app/src/components/MultilanguageDirection.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport data from \"./data/languages_all.json\";\n\n\nfunction MultilanguageDirection() {\n    const [language, setLanguage] = useState(\"default\");\n    const [direction, setDirection] = useState(\"\");\n    const [buttonText, setButtonText] = useState(\"\");\n\n    const languages = data[\"textSoftware\"].filter(element => element[\"text_id\"]===\"direction\")[0][\"item\"].map(element => element.lang)\n\n    const wordMap = new Map(data[\"textSoftware\"].map(\n        (value) => {\n            const textId = value[\"text_id\"];\n            const choices = new Map(value[\"item\"].map((obj) => [obj.lang, obj.text]));\n            return [textId, choices];\n        }\n    ));\n\n\n    const selectLanguage = () => {\n        const randomLanguage = languages[Math.floor(Math.random() * languages.length)];\n        setLanguage(randomLanguage)\n    };\n\n    useEffect(() => {\n        let buttonText = language\n        if (wordMap.get(\"nameOfLanguage\").has(language)) \n            buttonText += \" / \"+wordMap.get(\"nameOfLanguage\").get(language) \n        setButtonText(buttonText);\n        setDirection(wordMap.get(\"direction\").get(language))\n    }, [language]);\n\n    function handleClick() {\n        selectLanguage()\n    };\n\n    return (\n        <div>\n             <Button className=\"btn-rounded fw-bold px-4 py-4\" variant=\"success\" onClick={handleClick}>{buttonText}</Button>\n             <span className=\"fw-bold \" style={{textTransform: \"capitalize\", fontSize: \"36px\"}}> {direction}</span>\n        </div>\n    );\n}\n\nexport default MultilanguageDirection;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,iBAAiB;AACxC,OAAOC,IAAI,MAAM,2BAA2B;AAAC;AAG7C,SAASC,sBAAsB,GAAG;EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,SAAS,CAAC;EACnD,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,SAAS,GAAGR,IAAI,CAAC,cAAc,CAAC,CAACS,MAAM,CAACC,OAAO,IAAIA,OAAO,CAAC,SAAS,CAAC,KAAG,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAACC,GAAG,CAACD,OAAO,IAAIA,OAAO,CAACE,IAAI,CAAC;EAElI,MAAMC,OAAO,GAAG,IAAIC,GAAG,CAACd,IAAI,CAAC,cAAc,CAAC,CAACW,GAAG,CAC3CI,KAAK,IAAK;IACP,MAAMC,MAAM,GAAGD,KAAK,CAAC,SAAS,CAAC;IAC/B,MAAME,OAAO,GAAG,IAAIH,GAAG,CAACC,KAAK,CAAC,MAAM,CAAC,CAACJ,GAAG,CAAEO,GAAG,IAAK,CAACA,GAAG,CAACN,IAAI,EAAEM,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;IACzE,OAAO,CAACH,MAAM,EAAEC,OAAO,CAAC;EAC5B,CAAC,CACJ,CAAC;EAGF,MAAMG,cAAc,GAAG,MAAM;IACzB,MAAMC,cAAc,GAAGb,SAAS,CAACc,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGhB,SAAS,CAACiB,MAAM,CAAC,CAAC;IAC9EtB,WAAW,CAACkB,cAAc,CAAC;EAC/B,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACZ,IAAIS,UAAU,GAAGJ,QAAQ;IACzB,IAAIW,OAAO,CAACa,GAAG,CAAC,gBAAgB,CAAC,CAACC,GAAG,CAACzB,QAAQ,CAAC,EAC3CI,UAAU,IAAI,KAAK,GAACO,OAAO,CAACa,GAAG,CAAC,gBAAgB,CAAC,CAACA,GAAG,CAACxB,QAAQ,CAAC;IACnEK,aAAa,CAACD,UAAU,CAAC;IACzBD,YAAY,CAACQ,OAAO,CAACa,GAAG,CAAC,WAAW,CAAC,CAACA,GAAG,CAACxB,QAAQ,CAAC,CAAC;EACxD,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,SAAS0B,WAAW,GAAG;IACnBR,cAAc,EAAE;EACpB;EAAC;EAED,oBACI;IAAA,wBACK,QAAC,MAAM;MAAC,SAAS,EAAC,+BAA+B;MAAC,OAAO,EAAC,SAAS;MAAC,OAAO,EAAEQ,WAAY;MAAA,UAAEtB;IAAU;MAAA;MAAA;MAAA;IAAA,QAAU,eAC/G;MAAM,SAAS,EAAC,UAAU;MAAC,KAAK,EAAE;QAACuB,aAAa,EAAE,YAAY;QAAEC,QAAQ,EAAE;MAAM,CAAE;MAAA,gBAAG1B,SAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACrG;AAEd;AAAC,GAvCQH,sBAAsB;AAAA,KAAtBA,sBAAsB;AAyC/B,eAAeA,sBAAsB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}